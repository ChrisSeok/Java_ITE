<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration 
PUBLIC "-//mybatis.org/DTD Config 3.0//EN" 
"mybatis-3-config.dtd" >


<configuration>
	<!-- Driver properties 파일 -->
	<!-- 속성 파일로부터 속성을 로드하기 위한 리소스를 지정 -->
	<properties resource="./driver.properties"></properties>  



	<!-- MyBatis setting에 대한 내용, 상당히 많다요. but 다행히 대부분의 설정은 default로 사용이 가능(안적어도됨) -->
	
	<settings>
		<!-- 만약 MyBatis의 SQL Query(select)를 이용해서 처리했는데 데이터베이스에서 가져온 내용이 없다면 Java 
			객체 NULL로 리턴하세요! -->
		<setting name="jdbcTypeForNull" value="NULL" />
	</settings>



	<!-- Alias 설정. 여기서 설정하는 Alias(별명)는 오직 XML에서만 사용되요. 단순히 타이핑을 줄이기 위해서 사용돼요. -->
	
	<typeAliases>
		<!-- VO가 보통 길기때문에 aliasing 한다. -->
		<typeAlias alias="BookVO" type="booksearch.vo.BookVO" /> <!-- 해당 VO의 레퍼런스를 풀패키지명 대신 짧게 BookVO로 쓸게요 -->
	</typeAliases>



	<!-- DB 연결에 대한 설정 : 일반적으로 개발용, 운영용처럼 여러개의 환경을 설정해놓고 상황에 맞게 이용하는 방식을 사용해요. -->
	
	<environments default="development"> <!-- 기본으로 어떤걸 사용하겠다고 default에 명시 -->
		<environment id="development">  <!-- id 아무거나 잡아도 된다. -->
			<transactionManager type="JDBC"></transactionManager>  <!-- transactionManager는 type이 두 개가 있다 : 
													JDBC(트랜잭션 수동관리)/Managed(Container가 트랜잭션을 관리) -->

				<dataSource type="POOlED">  <!-- ConnectionPool 쓰겠다는 뜻 -->
					<property name="driver" value="${driver}" />  <!-- key값을 이용해서 driver.properties에서 가져오자 -->
					<property name="url" value="${url}" /> <!--$ 대신 #을 사용할 경우 값을 문자열로 변환해서 가져온다. $는 문자열 변환 없이 값만 달랑 들고온다.-->
					<property name="username" value="${username}" />
					<property name="password" value="${password}" />
				</dataSource>
			
		</environment>
	</environments>

<!-- 사용할 Mapper에 대한 설정 나와야 해요 -->
<mappers>
	<mapper resource="./sqlmap/Book.xml"/>  <!-- 쿼리가 들어있는 xml 파일 -->
</mappers>




</configuration>









